parameters:
  - name: build_configuration
    default: Release
    type: string
  - name: reports_folder
    type: string
  - name: fail_if_coverage_empty
    type: boolean
    default: true 
  - name: test_flags
    type: string
    default: ""
  - name: line_coverage_threshold
    type: number 
    default: 80
  - name: branch_coverage_threshold
    type: number
    default: 80

steps:
  - powershell: |
      if(Test-Path $(Common.TestResultsDirectory)){
        Remove-Item $(Common.TestResultsDirectory)/*.* -recurse
      }
    displayName: Clean Test Results if exists
  - task:  NuGetAuthenticate@1

  - task: DotNetCoreCLI@2
    displayName: restore
    inputs:
      command: "restore"
      projects: "**/*.sln"
      configuration: ${{ parameters.build_configuration }}

  - task: DotNetCoreCLI@2
    displayName: run tests
    inputs:
      command: "test"
      publishTestResults: false
      projects: "**/*.sln"
      arguments: '-c ${{ parameters.build_configuration }} --collect:"XPlat Code Coverage" -r ${{ parameters.reports_folder }} ${{ parameters.test_flags }}' 

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: "Cobertura"
      summaryFileLocation: "${{ parameters.reports_folder }}/**/coverage.cobertura.xml"
      failIfCoverageEmpty: ${{ parameters.fail_if_coverage_empty }}

  - task: BuildQualityChecks@8
    displayName: Check Line Coverage
    inputs:
      checkCoverage: true
      coverageFailOption: "fixed"
      coverageType: "lines"
      coverageThreshold: ${{ parameters.line_coverage_threshold }}
      runTitle: "lines"

  - task: BuildQualityChecks@8
    displayName: Check Branch Coverage
    inputs:
      checkCoverage: false
      coverageFailOption: "fixed"
      coverageType: "branches"
      coverageThreshold: ${{ parameters.branch_coverage_threshold }}
      runTitle: "branches"
      